---
title: "Figure script"
format: html
---

## Figure on Sweden's emergence as rich


```{r}
library(tidyverse)
library(gghighlight)

df <- readxl::read_excel(here::here("data/mpd2023_web.xlsx"), sheet = 3)

# Clean and tidy the dataset
df_tidy <- df %>%
    janitor::clean_names() %>%
    # Remove the first two rows which contain region and country code info
    slice(-(1:2)) %>%
    # Rename the first column to 'year'
    rename(year = 1) %>%
    # Convert year to numeric, removing any NA rows
    mutate(year = as.numeric(year)) %>%
    filter(!is.na(year)) %>%
    # Pivot longer to get country codes as a column
    pivot_longer(
        cols = -year,
        names_to = "country_code",
        values_to = "gdp_per_capita"
    ) %>%
    # Convert GDP values to numeric
    mutate(gdp_per_capita = as.numeric(gdp_per_capita)) %>%
    # Remove rows where GDP is NA
    filter(!is.na(gdp_per_capita)) %>%
    # Arrange by country and year
    arrange(country_code, year)

df_tidy %>%
    filter(year > 1800) %>%
    ggplot(aes(x = year, y = gdp_per_capita, group = country_code)) +
    geom_line() +
    gghighlight(country_code == "sweden", 
                label_key = country_code,
                unhighlighted_params = list(alpha = 0.1, color = "grey80")) +
    scale_y_log10() +
    labs(
        title = "Sweden's Emergence as a Rich Country",
        x = "Year",
        y = "GDP per Capita (log scale)",
        caption = "Data Source: Maddison Project Database"
    ) +
    theme_minimal()



# df_tidy %>% filter(year == 1951) %>% arrange(desc(gdp_per_capita)) %>% slice(1:10)
```



```{r}
# --- Packages ---
library(dplyr)
library(ggplot2)
library(ggrepel)
library(stringr)
library(countrycode)

# --- Output folder ---
dir.create("figures", showWarnings = FALSE, recursive = TRUE)

# --- Helpers ----------------------------------------------------------

# World Bank (WDI 7-region) label from country code or name
wb_region_from_code <- function(code_vec) {
    iso_try <- countrycode(code_vec, "iso3c", "region", warn = FALSE)
    name_try <- countrycode(str_to_title(gsub("_", " ", code_vec)),
        "country.name", "region",
        warn = FALSE
    )
    out <- ifelse(is.na(iso_try), name_try, iso_try)
    ifelse(is.na(out), "Other", out)
}

# Display name to use on labels
country_display_name <- function(code_vec) {
    # Try ISO3 -> English name
    n1 <- countrycode(code_vec, "iso3c", "country.name", warn = FALSE)
    # If NA, try interpreting the code as a (messy) country name
    n2 <- countrycode(str_to_title(gsub("_", " ", code_vec)),
        "country.name", "country.name",
        warn = FALSE
    )
    out <- ifelse(is.na(n1), n2, n1)
    # Fallback: prettified snake_case
    ifelse(is.na(out), str_to_title(gsub("_", " ", code_vec)), out)
}

# Robust flags for Sweden / UK regardless of code style
is_sweden <- function(x) tolower(x) %in% c("swe", "se", "sweden")
is_uk <- function(x) tolower(x) %in% c("gbr", "gb", "united_kingdom", "uk", "great_britain")
is_south_africa <- function(x) tolower(x) %in% c("rsa", "south_africa")

# Last non-missing point per country for label placement
last_points <- function(data) {
    data %>%
        filter(!is.na(gdp_per_capita)) %>%
        group_by(country_code) %>%
        slice_max(order_by = year, n = 1, with_ties = FALSE) %>%
        ungroup() %>%
        mutate(label = country_display_name(country_code))
}

# --- Common scales / theme -------------------------------------------
y_scale <- scale_y_log10(labels = scales::dollar_format(), limits = c(500, NA))
x_scale <- scale_x_continuous(expand = expansion(mult = c(0.01, 0.12))) # space on right for labels
base_theme <- theme_minimal() + theme(legend.position = "none")

# --- Base data --------------------------------------------------------
df_base <- df_tidy %>%
    filter(year > 1800) %>%
    mutate(
        wb_region   = wb_region_from_code(country_code),
        sweden_bool = is_sweden(country_code),
        uk_bool     = is_uk(country_code),
        sa_bool     = is_south_africa(country_code)
    )

# =====================================================================
# 1) Sweden only
# =====================================================================
p1_data <- df_base %>% filter(sweden_bool)
p1_labels <- last_points(p1_data)

p1 <- ggplot(p1_data, aes(year, gdp_per_capita, group = country_code)) +
    geom_line(color = "#006aa7", linewidth = 1.2) +
    geom_text_repel(
        data = p1_labels,
        aes(label = label),
        nudge_x = 5, hjust = 0, direction = "y",
        min.segment.length = 0, segment.size = 0.2, box.padding = 0.25, point.padding = 0.25,
        size = 3.2, seed = 42
    ) +
    y_scale +
    x_scale +
    labs(x = "Year", y = "GDP per Capita (log scale)", title = NULL, caption = "Data: Maddison Project Database") +
    base_theme

ggsave("figures/ed_step1_sweden.png", p1, width = 8, height = 5, dpi = 300)

# =====================================================================
# 2) Sweden vs everyone (others greyed)
# =====================================================================
p2_bg <- df_base %>% filter(!sweden_bool)
p2_fg <- df_base %>% filter(sweden_bool)
p2_labels <- last_points(p2_fg)

p2 <- ggplot() +
    geom_line(data = p2_bg, aes(year, gdp_per_capita, group = country_code), color = "grey80", alpha = 0.25) +
    geom_line(data = p2_fg, aes(year, gdp_per_capita), color = "#006aa7", linewidth = 1.2) +
    geom_text_repel(
        data = p2_labels,
        aes(x = year, y = gdp_per_capita, label = label),
        nudge_x = 5, hjust = 0, direction = "y",
        min.segment.length = 0, segment.size = 0.2, box.padding = 0.25, point.padding = 0.25,
        size = 3.2, seed = 42
    ) +
    y_scale +
    x_scale +
    labs(x = "Year", y = "GDP per Capita (log scale)", title = NULL, caption = "Data: Maddison Project Database") +
    base_theme

ggsave("figures/ed_step2_sweden_vs_all.png", p2, width = 8, height = 5, dpi = 300)

# =====================================================================
# 3) Sweden vs Europe (World Bank ‘Europe & Central Asia’)
# =====================================================================
europe_label <- "Europe & Central Asia"

p3_bg_all <- df_base # everyone faint
p3_bg_eur <- df_base %>% filter(wb_region == europe_label & !sweden_bool) # Europe mid
p3_fg_swe <- df_base %>% filter(sweden_bool)

p3_labels <- last_points(p3_fg_swe)

p3 <- ggplot() +
    geom_line(data = p3_bg_all, aes(year, gdp_per_capita, group = country_code), color = "grey85", alpha = 0.15) +
    geom_line(data = p3_bg_eur, aes(year, gdp_per_capita, group = country_code), color = "darkred", alpha = 0.65) +
    geom_line(data = p3_fg_swe, aes(year, gdp_per_capita), color = "#006aa7", linewidth = 1.2) +
    geom_text_repel(
        data = p3_labels,
        aes(x = year, y = gdp_per_capita, label = label),
        nudge_x = 5, hjust = 0, direction = "y",
        min.segment.length = 0, segment.size = 0.2, box.padding = 0.25, point.padding = 0.25,
        size = 3.2, seed = 42
    ) +
    y_scale +
    x_scale +
    labs(
        x = "Year", y = "GDP per Capita (log scale)", title = NULL,
        caption = "Data: Maddison Project Database; Regions: World Bank via countrycode"
    ) +
    base_theme

ggsave("figures/ed_step3_sweden_vs_europe.png", p3, width = 8, height = 5, dpi = 300)

# =====================================================================
# 4) Sweden + United Kingdom vs everyone
# =====================================================================
p4_bg <- df_base %>% filter(!sweden_bool & !uk_bool)
p4_uk <- df_base %>% filter(uk_bool)
p4_se <- df_base %>% filter(sweden_bool)

p4_labels <- last_points(bind_rows(p4_se, p4_uk))

p4 <- ggplot() +
    geom_line(data = p4_bg, aes(year, gdp_per_capita, group = country_code), color = "grey80", alpha = 0.25) +
    geom_line(data = p4_uk, aes(year, gdp_per_capita), color = "#cf142b", linewidth = 1.05) +
    geom_line(data = p4_se, aes(year, gdp_per_capita), color = "#006aa7", linewidth = 1.15) +
    geom_text_repel(
        data = p4_labels,
        aes(x = year, y = gdp_per_capita, label = label),
        nudge_x = 5, hjust = 0, direction = "y",
        min.segment.length = 0, segment.size = 0.2, box.padding = 0.25, point.padding = 0.25,
        size = 3.2, seed = 42
    ) +
    y_scale +
    x_scale +
    labs(
        x = "Year", y = "GDP per Capita (log scale)", title = NULL,
        caption = "Data: Maddison Project Database"
    ) +
    base_theme

ggsave("figures/ed_step4_sweden_uk_vs_all.png", p4, width = 8, height = 5, dpi = 300)



# =====================================================================
# 5) Sweden + United Kingdom + South Africa vs everyone
# =====================================================================
p5_bg <- df_base %>% filter(!sweden_bool & !uk_bool & !sa_bool)
p5_uk <- df_base %>% filter(uk_bool)
p5_se <- df_base %>% filter(sweden_bool)
p5_sa <- df_base %>% filter(sa_bool)

p5_labels <- last_points(bind_rows(p5_se, p5_uk, p5_sa))

p5 <- ggplot() +
    geom_line(data = p5_bg, aes(year, gdp_per_capita, group = country_code), color = "grey80", alpha = 0.25) +
    geom_line(data = p5_uk, aes(year, gdp_per_capita), color = "#cf142b", linewidth = 1.05) +
    geom_line(data = p5_sa, aes(year, gdp_per_capita), color = "#3da700ff", linewidth = 1.05) +
    geom_line(data = p5_se, aes(year, gdp_per_capita), color = "#006aa7", linewidth = 1.15) +
    geom_text_repel(
        data = p5_labels,
        aes(x = year, y = gdp_per_capita, label = label),
        nudge_x = 5, hjust = 0, direction = "y",
        min.segment.length = 0, segment.size = 0.2, box.padding = 0.25, point.padding = 0.25,
        size = 3.2, seed = 42
    ) +
    y_scale +
    x_scale +
    labs(
        x = "Year", y = "GDP per Capita (log scale)", title = NULL,
        caption = "Data: Maddison Project Database"
    ) +
    base_theme

ggsave("figures/ed_step5_sweden_uk_sa_vs_all.png", p5, width = 8, height = 5, dpi = 300)


```
